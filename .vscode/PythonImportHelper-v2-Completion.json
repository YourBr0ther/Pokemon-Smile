[
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "MongoClient",
        "importPath": "pymongo",
        "description": "pymongo",
        "isExtraImport": true,
        "detail": "pymongo",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_random_pokemon_sprite",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def get_random_pokemon_sprite():\n    total_pokemon = 898\n    random_id = random.randint(1, total_pokemon)\n    url = f\"{POKEAPI_BASE}/pokemon/{random_id}\"\n    data = requests.get(url).json()\n    name = data['name'].capitalize()\n    sprite_url = data['sprites']['front_default'] or ''\n    return {'name': name, 'sprite': sprite_url}\n@app.route('/')\ndef main_menu():",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "main_menu",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def main_menu():\n    random_pokemon = get_random_pokemon_sprite()\n    return render_template('index.html', sprite_url=random_pokemon['sprite'], pokemon_name=random_pokemon['name'])\n# -------------------\n# NEW SINGLE-PAGE POKEDEX ROUTE\n# -------------------\n@app.route('/pokedex')\ndef pokedex():\n    return render_template('pokedex.html')\n# -------------------",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "pokedex",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def pokedex():\n    return render_template('pokedex.html')\n# -------------------\n# BRUSHING SCREEN ROUTE\n# -------------------\n@app.route('/brushing')\ndef brushing():\n    return render_template('brushing.html')\n# -------------------\n# API ROUTES FOR MONGODB",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "brushing",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def brushing():\n    return render_template('brushing.html')\n# -------------------\n# API ROUTES FOR MONGODB\n# -------------------\n@app.route('/api/save_profile', methods=['POST'])\ndef save_profile():\n    data = request.json\n    profiles_collection.replace_one({\"name\": data[\"name\"]}, data, upsert=True)\n    return jsonify({\"status\": \"saved\"})",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "save_profile",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def save_profile():\n    data = request.json\n    profiles_collection.replace_one({\"name\": data[\"name\"]}, data, upsert=True)\n    return jsonify({\"status\": \"saved\"})\n@app.route('/api/load_profile/<name>')\ndef load_profile(name):\n    profile = profiles_collection.find_one({\"name\": name}, {\"_id\": 0})\n    return jsonify(profile or {})\n@app.route('/api/save_pokemon/<profile_name>', methods=['POST'])\ndef save_pokemon(profile_name):",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "load_profile",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def load_profile(name):\n    profile = profiles_collection.find_one({\"name\": name}, {\"_id\": 0})\n    return jsonify(profile or {})\n@app.route('/api/save_pokemon/<profile_name>', methods=['POST'])\ndef save_pokemon(profile_name):\n    data = request.json\n    profiles_collection.update_one(\n        {\"name\": profile_name},\n        {\"$push\": {\"caught_pokemon\": data}},\n        upsert=True",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "save_pokemon",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def save_pokemon(profile_name):\n    data = request.json\n    profiles_collection.update_one(\n        {\"name\": profile_name},\n        {\"$push\": {\"caught_pokemon\": data}},\n        upsert=True\n    )\n    return jsonify({\"status\": \"pokemon added\"})\n@app.route('/api/get_pokedex/<profile_name>')\ndef get_pokedex(profile_name):",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "get_pokedex",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def get_pokedex(profile_name):\n    profile = profiles_collection.find_one({\"name\": profile_name}, {\"_id\": 0, \"caught_pokemon\": 1})\n    return jsonify(profile.get(\"caught_pokemon\", []) if profile else [])\n@app.route('/api/get_profiles')\ndef get_profiles():\n    profiles = list(profiles_collection.find({}, {\"_id\": 0}))\n    return jsonify(profiles)\n@app.route('/api/active_profile')\ndef active_profile():\n    profile = profiles_collection.find_one({}, {\"_id\": 0})",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "get_profiles",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def get_profiles():\n    profiles = list(profiles_collection.find({}, {\"_id\": 0}))\n    return jsonify(profiles)\n@app.route('/api/active_profile')\ndef active_profile():\n    profile = profiles_collection.find_one({}, {\"_id\": 0})\n    return jsonify(profile or {})\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000, debug=True)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "active_profile",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def active_profile():\n    profile = profiles_collection.find_one({}, {\"_id\": 0})\n    return jsonify(profile or {})\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000, debug=True)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = Flask(__name__)\nPOKEAPI_BASE = \"https://pokeapi.co/api/v2\"\nMONGO_URI = os.environ.get(\"MONGO_URI\", \"mongodb://mongo:27017/\")\nclient = MongoClient(MONGO_URI)\ndb = client[\"pokemon_smile\"]\nprofiles_collection = db[\"profiles\"]\n# -------------------\n# HOME PAGE\n# -------------------\ndef get_random_pokemon_sprite():",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "POKEAPI_BASE",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "POKEAPI_BASE = \"https://pokeapi.co/api/v2\"\nMONGO_URI = os.environ.get(\"MONGO_URI\", \"mongodb://mongo:27017/\")\nclient = MongoClient(MONGO_URI)\ndb = client[\"pokemon_smile\"]\nprofiles_collection = db[\"profiles\"]\n# -------------------\n# HOME PAGE\n# -------------------\ndef get_random_pokemon_sprite():\n    total_pokemon = 898",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "MONGO_URI",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "MONGO_URI = os.environ.get(\"MONGO_URI\", \"mongodb://mongo:27017/\")\nclient = MongoClient(MONGO_URI)\ndb = client[\"pokemon_smile\"]\nprofiles_collection = db[\"profiles\"]\n# -------------------\n# HOME PAGE\n# -------------------\ndef get_random_pokemon_sprite():\n    total_pokemon = 898\n    random_id = random.randint(1, total_pokemon)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "client = MongoClient(MONGO_URI)\ndb = client[\"pokemon_smile\"]\nprofiles_collection = db[\"profiles\"]\n# -------------------\n# HOME PAGE\n# -------------------\ndef get_random_pokemon_sprite():\n    total_pokemon = 898\n    random_id = random.randint(1, total_pokemon)\n    url = f\"{POKEAPI_BASE}/pokemon/{random_id}\"",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "db",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "db = client[\"pokemon_smile\"]\nprofiles_collection = db[\"profiles\"]\n# -------------------\n# HOME PAGE\n# -------------------\ndef get_random_pokemon_sprite():\n    total_pokemon = 898\n    random_id = random.randint(1, total_pokemon)\n    url = f\"{POKEAPI_BASE}/pokemon/{random_id}\"\n    data = requests.get(url).json()",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "profiles_collection",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "profiles_collection = db[\"profiles\"]\n# -------------------\n# HOME PAGE\n# -------------------\ndef get_random_pokemon_sprite():\n    total_pokemon = 898\n    random_id = random.randint(1, total_pokemon)\n    url = f\"{POKEAPI_BASE}/pokemon/{random_id}\"\n    data = requests.get(url).json()\n    name = data['name'].capitalize()",
        "detail": "app",
        "documentation": {}
    }
]